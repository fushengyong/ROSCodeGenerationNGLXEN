<#@ assembly name="System.Core" #>
<#@ assembly name="EnvDTE" #>

<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="EnvDTE" #>

<#+
    public class SolutionManager{
        private const string PROJECT_DIRECTORY_GUID = "{6BB5F8EF-4483-11D3-8BCF-00C04F8EC28C}";
        private const string FULL_PATH_ITEM_PROPERTY = "FullPath";

        private DTE _dte;
        private Project _project;

        public Project ActualProject { get { return _project; } }
        public string DefaultNamespace
        { 
            get { 
                if(null != _project){
                    return _project.Properties.Item("RootNamespace").Value.ToString();
                } else {
                    return string.Empty;
                }
            }
        }

        public static string GetProjectItemFullPath(ProjectItem item){
            return item.Properties.Item(FULL_PATH_ITEM_PROPERTY).Value.ToString();
        }

        public static ProjectItem AddDirectoryToProjectItem(ProjectItem projectItem, string directoryName){
            if(null == directoryName){
                throw new ArgumentNullException(nameof(directoryName));
            }

            ProjectItem result = null;

            if(!IsDirectoryExistsInProjectItems(projectItem.ProjectItems, directoryName, ref result)){
                result = projectItem.ProjectItems.AddFolder(directoryName);
            }
            
            return result;
        }

        public static bool IsDirectoryExistsInProjectItems(ProjectItems projectItems, string directoryName, ref ProjectItem projectItem){
            foreach(ProjectItem currentProjectItem in projectItems){
                if(currentProjectItem.Kind == PROJECT_DIRECTORY_GUID && currentProjectItem.Name == directoryName){
                    projectItem = currentProjectItem;
                    return true;
                }
            }
            return false;
        }

        public static ProjectItem AddFileToProjectItem(ProjectItem projectItem, FileInfo file){
            if(null == projectItem){
                throw new ArgumentNullException(nameof(projectItem));
            }

            if(file == null){
                throw new ArgumentNullException(nameof(file));
            }

            if(projectItem.Kind != PROJECT_DIRECTORY_GUID){
                throw new InvalidOperationException("The given project item is not a directory!");
            }
            
            if(!file.Exists){
                throw new FileNotFoundException(file.FullName);
            }

            ProjectItem newFileItem = projectItem.ProjectItems.AddFromFile(file.FullName);

            return newFileItem;
        }

        public SolutionManager(IServiceProvider serviceProvider, string templateFile){
            if(serviceProvider == null || templateFile == null){
                throw new ArgumentNullException();
            }

            if(!File.Exists(templateFile)){
                throw new FileNotFoundException(nameof(templateFile));
            }

            _dte = serviceProvider.GetService(typeof(DTE)) as DTE;
            _project = _dte.Solution.FindProjectItem(templateFile).ContainingProject;
        }

        public ProjectItem Initialize(string directoryName){
            if(directoryName == null){
                throw new ArgumentNullException();
            }

            ProjectItem result = null;

            if(!IsDirectoryExistsInProjectItems(_project.ProjectItems, directoryName, ref result)){
                result = _project.ProjectItems.AddFolder(directoryName);
            }else{
                result.Remove();
                Directory.Delete(GetProjectItemFullPath(result), true);
                //foreach(ProjectItem item in result.ProjectItems){
                    //item.Remove();
                    //string itemFullPath = item.Properties.Item(FULL_PATH_ITEM_PROPERTY).Value.ToString();
                    //if(item.Kind == PROJECT_DIRECTORY_GUID){
                        //Directory.Delete(itemFullPath, true);
                    //}else{
                        //File.Delete(itemFullPath);
                    //}
                //}
                result = _project.ProjectItems.AddFolder(directoryName);
            }

            _project.Save();

            return result;
        }
    }
#>