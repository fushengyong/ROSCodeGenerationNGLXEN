<#+
public class MessageField{
    public string NamespaceName{ get; private set; }
    public string TypeName { get; private set; }
    public string FieldName { get; private set; }
    public string FieldValue { get; private set; }
    public int ArrayElementCount { get; private set;}
    public bool IsArray { get; private set; }
    public bool IsConst { get { return !string.IsNullOrEmpty(FieldValue); } }

    public MessageField(string fieldName, string typeName, string namespaceName, bool isArray, int arrayElementCount, string fieldValue)
    {
        if(null == fieldName){
            throw new ArgumentNullException(nameof(fieldName));
        }

        if(null == typeName){
            throw new ArgumentNullException(nameof(fieldName));
        }

        if(null == namespaceName){
            throw new ArgumentNullException(nameof(fieldName));
        }

        if(null == fieldValue){
            throw new ArgumentNullException(nameof(fieldName));
        }

        this.FieldName = fieldName;
        this.TypeName = typeName;
        this.NamespaceName = namespaceName;
        this.IsArray = isArray;
        this.ArrayElementCount = arrayElementCount;
        this.FieldValue = fieldValue;
    }

    public override bool Equals(object obj){
        if(obj is MessageField){
            MessageField anotherMember = obj as MessageField;
            return this.FieldName == anotherMember.FieldName;
        }
        return false;
    }
}
#>